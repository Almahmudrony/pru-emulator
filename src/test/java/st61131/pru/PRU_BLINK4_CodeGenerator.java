package st61131.pru;

/*Generated by MPS */

import com.github.vlsi.pru.plc110.ArithmeticInstruction;
import com.github.vlsi.pru.plc110.CodeEmitter;
import com.github.vlsi.pru.plc110.Label;
import com.github.vlsi.pru.plc110.LdiInstruction;
import com.github.vlsi.pru.plc110.QuickBranchInstruction;
import com.github.vlsi.pru.plc110.Register;
import com.github.vlsi.pru.plc110.RegisterField;

import java.util.function.Consumer;

public class PRU_BLINK4_CodeGenerator implements Consumer<CodeEmitter> {
  @Override
  public void accept(CodeEmitter ce) {
    Label startWhileBody0 = new Label("startWhileBody0");
    Label startRepeat2 = new Label("startRepeat2");
    Label endWhile1 = new Label("endWhile1");
    ce.visitInstruction(
        new LdiInstruction(new Register(1, RegisterField.w0), (short) 65535).setComment(
            "xx => R1"));
    ce.visitInstruction(
        new LdiInstruction(new Register(1, RegisterField.w2), (short) 65535).setComment(""));
    ce.visitInstruction(
        new LdiInstruction(new Register(2, RegisterField.dw), (short) 0).setComment("out => R2"));
    ce.visitLabel(startWhileBody0);
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.XOR,
        new Register(2, RegisterField.dw), new Register(2, RegisterField.dw),
        new Register(1, RegisterField.dw)).setComment("out => R2, xx => R1"));
    ce.visitInstruction(
        new LdiInstruction(new Register(3, RegisterField.w0), (short) 30000).setComment(
            "len => R3.w0"));
    ce.visitLabel(startRepeat2);
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.SUB,
        new Register(3, RegisterField.w0), new Register(3, RegisterField.w0), 2).setComment(
        "len => R3.w0"));

    ce.visitInstruction(
        new QuickBranchInstruction(QuickBranchInstruction.Operation.NE, startRepeat2,
            new Register(3, RegisterField.w0), 0).setComment("len => R3.w0"));

    //
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.ADD,
        new Register(30, RegisterField.dw), new Register(2, RegisterField.dw), 0).setComment(
        "out => R2"));

    ce.visitInstruction(new QuickBranchInstruction(startWhileBody0).setComment(""));
    ce.visitLabel(endWhile1);


  }
}
