package st61131.pru;

/*Generated by MPS */

import com.github.vlsi.pru.plc110.ArithmeticInstruction;
import com.github.vlsi.pru.plc110.CodeEmitter;
import com.github.vlsi.pru.plc110.Format2Instruction;
import com.github.vlsi.pru.plc110.JumpInstruction;
import com.github.vlsi.pru.plc110.Label;
import com.github.vlsi.pru.plc110.LdiInstruction;
import com.github.vlsi.pru.plc110.LeftMostBitDetectInstruction;
import com.github.vlsi.pru.plc110.QuickBranchInstruction;
import com.github.vlsi.pru.plc110.Register;
import com.github.vlsi.pru.plc110.RegisterField;

import java.util.function.Consumer;

public class PRU_MULDIV_CodeGenerator implements Consumer<CodeEmitter> {
  @Override
  public void accept(CodeEmitter ce) {
    Label if1 = new Label("if1");
    Label endIf0 = new Label("endIf0");
    Label startWhileBody2 = new Label("startWhileBody2");
    Label endIf4 = new Label("endIf4");
    Label endWhile3 = new Label("endWhile3");
    Label startWhileBody5 = new Label("startWhileBody5");
    Label endIf8 = new Label("endIf8");
    Label endIf7 = new Label("endIf7");
    Label endIf9 = new Label("endIf9");
    Label endWhile6 = new Label("endWhile6");
    // http://stackoverflow.com/a/4144956/1261287
    ce.visitInstruction(
        new LdiInstruction(new Register(4, RegisterField.dw), (short) 0).setComment("div => R4"));
    ce.visitInstruction(
        new LdiInstruction(new Register(5, RegisterField.dw), (short) 0).setComment("mod => R5"));
    // Call PRU_DIV
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.ADD,
        new Register(6, RegisterField.dw), new Register(2, RegisterField.dw), 0).setComment(
        "tmpPRU_DIV_5_x => R6, y => R2"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.ADD,
        new Register(7, RegisterField.dw), new Register(3, RegisterField.dw), 0).setComment(
        "tmpPRU_DIV_5_y => R7, z => R3"));
    ce.visitInstruction(new LeftMostBitDetectInstruction(new Register(8, RegisterField.b0),
        new Register(6, RegisterField.dw), (byte) 1).setComment(
        "tmpPRU_DIV_5_bitX => R8.b0, tmpPRU_DIV_5_x => R6"));
    ce.visitInstruction(new LeftMostBitDetectInstruction(new Register(8, RegisterField.b1),
        new Register(7, RegisterField.dw), (byte) 1).setComment(
        "tmpPRU_DIV_5_bitY => R8.b1, tmpPRU_DIV_5_y => R7"));

    ce.visitInstruction(new LdiInstruction(new Register(9, RegisterField.dw), (short) 1).setComment(
        "tmpPRU_DIV_5_mask => R9"));
    ce.visitInstruction(new QuickBranchInstruction(QuickBranchInstruction.Operation.GT, if1,
        new Register(8, RegisterField.b1), new Register(8, RegisterField.b0)).setComment(
        "tmpPRU_DIV_5_bitY => R8.b1, tmpPRU_DIV_5_bitX => R8.b0"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.ADD,
        new Register(10, RegisterField.dw), new Register(7, RegisterField.dw), 0).setComment(
        "tmpPRU_DIV_5_b => R10, tmpPRU_DIV_5_y => R7"));

    ce.visitInstruction(new JumpInstruction(Format2Instruction.Operation.JMP, endIf0,
        new Register(1, RegisterField.dw)).setComment(""));
    ce.visitLabel(if1);
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.SUB,
        new Register(8, RegisterField.b0), new Register(8, RegisterField.b0),
        new Register(8, RegisterField.b1)).setComment(
        "tmpPRU_DIV_5_diff => R8.b0, tmpPRU_DIV_5_bitX => R8.b0, tmpPRU_DIV_5_bitY => R8.b1"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.LSL,
        new Register(10, RegisterField.dw), new Register(7, RegisterField.dw),
        new Register(8, RegisterField.b0)).setComment(
        "tmpPRU_DIV_5_b => R10, tmpPRU_DIV_5_y => R7, tmpPRU_DIV_5_diff => R8.b0"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.LSL,
        new Register(9, RegisterField.dw), new Register(9, RegisterField.dw),
        new Register(8, RegisterField.b0)).setComment(
        "tmpPRU_DIV_5_mask => R9, tmpPRU_DIV_5_diff => R8.b0"));

    ce.visitLabel(endIf0);

    ce.visitInstruction(new LdiInstruction(new Register(7, RegisterField.dw), (short) 0).setComment(
        "tmpPRU_DIV_5_div => R7"));
    ce.visitInstruction(new QuickBranchInstruction(QuickBranchInstruction.Operation.EQ, endWhile3,
        new Register(9, RegisterField.dw), 0).setComment("tmpPRU_DIV_5_mask => R9"));
    ce.visitLabel(startWhileBody2);
    ce.visitInstruction(new QuickBranchInstruction(QuickBranchInstruction.Operation.GT, endIf4,
        new Register(6, RegisterField.dw), new Register(10, RegisterField.dw)).setComment(
        "tmpPRU_DIV_5_a => R6, tmpPRU_DIV_5_b => R10"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.ADD,
        new Register(7, RegisterField.dw), new Register(7, RegisterField.dw),
        new Register(9, RegisterField.dw)).setComment(
        "tmpPRU_DIV_5_div => R7, tmpPRU_DIV_5_mask => R9"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.SUB,
        new Register(6, RegisterField.dw), new Register(6, RegisterField.dw),
        new Register(10, RegisterField.dw)).setComment(
        "tmpPRU_DIV_5_a => R6, tmpPRU_DIV_5_b => R10"));

    ce.visitLabel(endIf4);

    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.LSR,
        new Register(9, RegisterField.dw), new Register(9, RegisterField.dw), 1).setComment(
        "tmpPRU_DIV_5_mask => R9"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.LSR,
        new Register(10, RegisterField.dw), new Register(10, RegisterField.dw), 1).setComment(
        "tmpPRU_DIV_5_b => R10"));

    ce.visitInstruction(
        new QuickBranchInstruction(QuickBranchInstruction.Operation.NE, startWhileBody2,
            new Register(9, RegisterField.dw), 0).setComment("tmpPRU_DIV_5_mask => R9"));
    ce.visitLabel(endWhile3);

    // End PRU_DIV
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.ADD,
        new Register(8, RegisterField.dw), new Register(1, RegisterField.dw), 0).setComment(
        "a => R8, x => R1"));
    ce.visitInstruction(new QuickBranchInstruction(QuickBranchInstruction.Operation.EQ, endWhile6,
        new Register(8, RegisterField.dw), 0).setComment("a => R8"));
    ce.visitLabel(startWhileBody5);
    ce.visitInstruction(new QuickBranchInstruction(QuickBranchInstruction.Operation.BC, endIf7,
        new Register(8, RegisterField.dw), 0).setComment("a => R8"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.ADD,
        new Register(4, RegisterField.dw), new Register(4, RegisterField.dw),
        new Register(7, RegisterField.dw)).setComment("div => R4, qn => R7"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.ADD,
        new Register(5, RegisterField.dw), new Register(5, RegisterField.dw),
        new Register(6, RegisterField.dw)).setComment("mod => R5, rn => R6"));
    ce.visitInstruction(new QuickBranchInstruction(QuickBranchInstruction.Operation.GT, endIf8,
        new Register(5, RegisterField.dw), new Register(3, RegisterField.dw)).setComment(
        "mod => R5, z => R3"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.ADD,
        new Register(4, RegisterField.dw), new Register(4, RegisterField.dw), 1).setComment(
        "div => R4"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.SUB,
        new Register(5, RegisterField.dw), new Register(5, RegisterField.dw),
        new Register(3, RegisterField.dw)).setComment("mod => R5, z => R3"));

    ce.visitLabel(endIf8);


    ce.visitLabel(endIf7);

    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.LSR,
        new Register(8, RegisterField.dw), new Register(8, RegisterField.dw), 1).setComment(
        "a => R8"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.LSL,
        new Register(7, RegisterField.dw), new Register(7, RegisterField.dw), 1).setComment(
        "qn => R7"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.LSL,
        new Register(6, RegisterField.dw), new Register(6, RegisterField.dw), 1).setComment(
        "rn => R6"));
    ce.visitInstruction(new QuickBranchInstruction(QuickBranchInstruction.Operation.GT, endIf9,
        new Register(6, RegisterField.dw), new Register(3, RegisterField.dw)).setComment(
        "rn => R6, z => R3"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.ADD,
        new Register(7, RegisterField.dw), new Register(7, RegisterField.dw), 1).setComment(
        "qn => R7"));
    ce.visitInstruction(new ArithmeticInstruction(ArithmeticInstruction.Operation.SUB,
        new Register(6, RegisterField.dw), new Register(6, RegisterField.dw),
        new Register(3, RegisterField.dw)).setComment("rn => R6, z => R3"));

    ce.visitLabel(endIf9);


    ce.visitInstruction(
        new QuickBranchInstruction(QuickBranchInstruction.Operation.NE, startWhileBody5,
            new Register(8, RegisterField.dw), 0).setComment("a => R8"));
    ce.visitLabel(endWhile6);

    //

  }
}
